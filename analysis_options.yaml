# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at
  # https://dart-lang.github.io/linter/lints/index.html.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    # avoid_print: false  # Uncomment to disable the `avoid_print` rule
    # prefer_single_quotes: true  # Uncomment to enable the `prefer_single_quotes` rule

  # types
    - avoid_type_to_string
    - test_types_in_equals
    - always_declare_return_types
    # - always_specify_types
    - avoid_catching_errors
    - avoid_implementing_value_types
    - avoid_private_typedef_functions
    # - avoid_types_on_closure_parameters
    - cast_nullable_to_non_nullable
    - library_private_types_in_public_api
    - no_runtimeType_toString
    - null_check_on_nullable_type_parameter
    # - omit_local_variable_types
    - tighten_type_of_initializing_formals
    # - type_annotate_public_apis
    - unnecessary_nullable_for_final_variable_declarations
    - use_late_for_private_fields_and_variables

    # dynamic types
    - avoid_dynamic_calls
    - avoid_annotating_with_dynamic

    # imports
    # - always_use_package_imports
    # - prefer_relative_imports

    # Error
    - avoid_returning_null_for_future
    - avoid_slow_async_io
    - cancel_subscriptions
    - close_sinks
    # - comment_references # Unused because https://github.com/dart-lang/sdk/issues/36974
    # - diagnostic_describe_all_properties
    - literal_only_boolean_expressions
    - no_adjacent_strings_in_list
    - throw_in_finally
    - unnecessary_statements
    - unsafe_html

    # Style
    # - always_put_control_body_on_new_line
    # - always_put_required_named_parameters_first
    - avoid_bool_literals_in_conditional_expressions
    - avoid_catches_without_on_clauses
    # - avoid_classes_with_only_static_members
    - avoid_double_and_int_checks
    - avoid_equals_and_hash_code_on_mutable_classes
    - avoid_escaping_inner_quotes
    - avoid_field_initializers_in_const_classes
    - avoid_js_rounded_ints
    - avoid_multiple_declarations_per_line
    # - avoid_positional_boolean_parameters
    - avoid_redundant_argument_values
    - avoid_returning_null
    - avoid_returning_this
    - avoid_setters_without_getters
    - avoid_unused_constructor_parameters
    - avoid_void_async
    - cascade_invocations
    - deprecated_consistency
    - directives_ordering
    - do_not_use_environment
    - eol_at_end_of_file
    - flutter_style_todos
    - join_return_with_assignment
    - leading_newlines_in_multiline_strings
    - lines_longer_than_80_chars
    - missing_whitespace_between_adjacent_strings
    - noop_primitive_operations
    
    - one_member_abstracts
    - only_throw_errors
    - package_api_docs
    - parameter_assignments
    - prefer_asserts_in_initializer_lists
    - prefer_asserts_with_message
    - prefer_constructors_over_static_methods
    # - prefer_double_quotes
    # - prefer_expression_function_bodies
    - prefer_final_in_for_each
    - prefer_final_locals
    # - prefer_final_parameters
    - prefer_foreach
    - prefer_if_elements_to_conditional_expressions
    - prefer_int_literals
    # - prefer_interpolation_to_compose_strings
    - prefer_mixin
    - prefer_null_aware_method_calls
    - prefer_single_quotes
    # - public_member_api_docs
    # - sort_child_properties_last
    # - sort_constructors_first
    - sort_unnamed_constructors_first
    - unawaited_futures
    - unnecessary_await_in_return
    - unnecessary_lambdas
    - unnecessary_null_aware_assignments
    - unnecessary_parenthesis
    - unnecessary_raw_strings
    - use_if_null_to_convert_nulls_to_bools
    - use_is_even_rather_than_modulo
    - use_named_constants
    - use_raw_strings
    - use_setters_to_change_properties
    - use_string_buffers
    - use_test_throws_matchers
    - use_to_and_as_if_applicable

    # Pub
    - depend_on_referenced_packages
    # - sort_pub_dependencies

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
